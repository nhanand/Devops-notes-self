3.18

setup a tom cat server

- deploy our code on tomcat server
---------------------------------------

- go to aws console and create and ec2 instance.

- copy the public ip address and launch it into browser

- login into tomcat account with ip address as like Jenkins

- go to root directory

- amazon-linux-extras // to see all remositories

- amazon-linux-extras install java-openjdk11

- check java -version

- now install topmcat on cd /opt dir in root directory

ll

extract the file 

tar -xvzf apache-tomcat-9.0.89.tar.gz
ll
mv apache-tomcat-9.0.89 tomcat

- cd tomcat
- cd bin
 in bin directory we can start our tomcat server

note startup.sh and shutdown.sh to start and stop services

note in bin dir use ./startup.sh  to start the tomcat server

- now go to browser and copy tomcat public id 54.226.182.102:8080 and start the server.

---------------------------------------------------

now we have to login to tomcat server to web ui

- use manager app 

cd ../..

- go to tomcat dir 

find / -name context.xml

/opt/tomcat/conf/context.xml
/opt/tomcat/webapps/docs/META-INF/context.xml
/opt/tomcat/webapps/examples/META-INF/context.xml
/opt/tomcat/webapps/manager/META-INF/context.xml

and update what is available on webapps (host-manager and manager)

go to vi editor 

/opt/tomcat/webapps/examples/META-INF/context.xml
/opt/tomcat/webapps/manager/META-INF/context.xml
 AND 

COMMENT THE IP ADRESSS

now 

- go to bin dir and stop the tomcat server by ./shutdown.sh

---------------------------------------------------------------------

start the server 
./ startup.sh

go to manager app it will ask for creds

- for the tomcat-user.xml req which is in tomcat/conf dir

- go to tomcat/conf dir

- go to vi tomcat-user.xml 
  
note to go end of the file shift g is used

and paste thesse

 <role rolename="manager-gui"/>
 <role rolename="manager-script"/>
 <role rolename="manager-jmx"/>
 <role rolename="manager-status"/>
 <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
 <user username="deployer" password="deployer" roles="manager-script"/>
 <user username="tomcat" password="s3cret" roles="manager-gui"/>

:wq

--------------------------------------------------------------------

ln -s /opt/tomcat/bin/startup.sh /usr/local/bin/tomcatup
echo $PATH   // to check the path

ln -s /opt/tomcat/bin/shutdown.sh /usr/local/bin/tomcatdown

now use 
tomcatup      to start
tomcatdown    to stop

-----------------------------------------------------

tomcatup

go to manager ui

and login  using either admin or tomcat

<user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
 <user username="deployer" password="deployer" roles="manager-script"/>
 <user username="tomcat" password="s3cret" roles="manager-gui"/>

-----------------------------------------------------------------------

3.19 integrating tomcat with Jenkins

steps 
1. install plugin
2. configure Jenkins

-------------------------------------

- login to Jenkins

password change Jenkins

- install deploy to container plugins

   manage Jenkins/plugins/available

---------------------------------------

now need to configure tomcat with creds 

- go to manage Jenkins
- credentials/system/global credentials/add credentials

use deployer plugin creds // tom cat creds admin/deployer/tomcat

-----------------------------------------------------

go back to dashboard

- create a new job

build_and_deploy_job

under maven project

============================================

cron job is a job scheduler which triggers yours job at specific time.

poll scm- used for auto deployment. if there are changes then build go happen else not.

===============================================================================================
